<?php
namespace Riki\Subscription\Model\ProductCart\ResourceModel\ProductCart;

class Collection extends \Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection
{
    protected $versionFactory;

    public function __construct
    (
        \Riki\Subscription\Model\Version\VersionFactory $versionFactory,
        \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory,
        \Psr\Log\LoggerInterface $logger,
        \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy,
        \Magento\Framework\Event\ManagerInterface $eventManager
    )
    {
        $this->versionFactory = $versionFactory;
        parent::__construct($entityFactory, $logger, $fetchStrategy, $eventManager, null, null);
    }
    /**
     * Define resource model
     *
     * @return void
     */
    protected function _construct()
    {
        $this->_init('Riki\Subscription\Model\ProductCart\ProductCart', 'Riki\Subscription\Model\ProductCart\ResourceModel\ProductCart');
    }

    /**
     * If profile have version => get version data.
     *
     * @param array|string $field
     * @param null $condition
     * @param bool $isOrigin
     *
     * @return $this
     */
    public function addFieldToFilter($field, $condition = null, $isOrigin = false)
    {
        if($field == 'profile_id' and is_numeric($condition) and $isOrigin == false){
            $versionModel = $this->versionFactory->create()->getCollection();
            $versionModel->addFieldToFilter('rollback_id',$condition);
            $versionModel->addFieldToFilter('status',1);
            $versionModel->setPageSize(1);
            $firstItem = $versionModel->getFirstItem();
            if($firstItem->hasData('moved_to')){
                $condition = $firstItem->getData('moved_to');
            }
        }
        return parent::addFieldToFilter($field, $condition); // TODO: Change the autogenerated stub
    }
}